#include <KinematicPlots/Analysis.h>

//SetBranchAddress (cause I'm lazy)
#define SBA(item) SetBranchAddress(#item, &item)

void gFEX::Analysis :: InitializeBranches( ) {

	//m_mapTree->SetBranchStatus (*", 0);
	m_mapTree->SBA(scells_eta);
	m_mapTree->SBA(scells_phi);
	m_mapTree->SBA(scells_etaMin);
	m_mapTree->SBA(scells_etaMax);
	m_mapTree->SBA(scells_phiMin);
	m_mapTree->SBA(scells_phiMax);
	m_mapTree->SBA(scells_etaGranularity);
	m_mapTree->SBA(scells_phiGranularity);
	m_mapTree->SBA(scells_sinTh);
	m_mapTree->SBA(scells_cosTh);
	m_mapTree->SBA(scells_sinPhi);
	m_mapTree->SBA(scells_cosPhi);
	m_mapTree->SBA(scells_cotTh);
	m_mapTree->SBA(scells_x);
	m_mapTree->SBA(scells_y);
	m_mapTree->SBA(scells_z);
	m_mapTree->SBA(scells_badcell);
	m_mapTree->SBA(scells_ID);
	m_mapTree->SBA(scells_detName);
	m_mapTree->SBA(SCgTowerIndex);
	m_mapTree->SBA(gTowerN);
	m_mapTree->SBA(gTowerPhi);
	m_mapTree->SBA(gTowerPhiGeometric);
	m_mapTree->SBA(gTowerEta);
	m_mapTree->SBA(gTowerEtaGeometric);
	m_mapTree->SBA(gTowerEtaBins);
	m_mapTree->SBA(gTowerEtaMin);
	m_mapTree->SBA(gTowerEtaMax);
	m_mapTree->SBA(gTowerPhiBins);
	m_mapTree->SBA(gTowerPhiBinsFCAL);
	m_mapTree->SBA(gTowerPhiMin);
	m_mapTree->SBA(gTowerPhiMax);
	//m_mapTree->SBA(jTowerN);
	//m_mapTree->SBA(jTowerPhi);
	//m_mapTree->SBA(jTowerEta);
	//m_mapTree->SBA(jTowerEtaMin);
	//m_mapTree->SBA(jTowerEtaMax);
	//m_mapTree->SBA(jTowerPhiMin);
	//m_mapTree->SBA(jTowerPhiMax);

	//m_tree->SetBranchStatus (*", 0);
	m_tree->SBA(scells_Et);
	m_tree->SBA(scells_time);
	m_tree->SBA(scells_provenance);
	m_tree->SBA(scells_quality);
	m_tree->SBA(gTowerEt);
	m_tree->SBA(gTowerPhiWeighted);
	m_tree->SBA(gTowerEtaWeighted);
	m_tree->SBA(gTowerNCells);
	m_tree->SBA(gTowerEt_EM);
	m_tree->SBA(gTowerPhi_EM);
	m_tree->SBA(gTowerEta_EM);
	m_tree->SBA(gTowerPhiWeighted_EM);
	m_tree->SBA(gTowerEtaWeighted_EM);
	m_tree->SBA(gTowerNCells_EM);
	m_tree->SBA(gTowerEt_Had);
	m_tree->SBA(gTowerPhi_Had);
	m_tree->SBA(gTowerEta_Had);
	m_tree->SBA(gTowerPhiWeighted_Had);
	m_tree->SBA(gTowerEtaWeighted_Had);
	m_tree->SBA(gTowerNCells_Had);
	//m_tree->SBA(jTowerEt);
	//m_tree->SBA(jTowerNCells);
	//m_tree->SBA(jTowerEt_EM);
	//m_tree->SBA(jTowerNCells_EM);
	//m_tree->SBA(jTowerEt_Had);
	//m_tree->SBA(jTowerNCells_Had);
	m_tree->SBA(Run2_TT_eta);
	m_tree->SBA(Run2_TT_phi);
	m_tree->SBA(Run2_TT_JEP_Et);
	m_tree->SBA(Run2_TT_CP_Et);
	m_tree->SBA(Run2_L1Jet_Et);
	m_tree->SBA(Run2_L1Jet_eta);
	m_tree->SBA(Run2_L1Jet_phi);
	m_tree->SBA(Run2_AntiKt4TT_Et);
	m_tree->SBA(Run2_AntiKt4TT_eta);
	m_tree->SBA(Run2_AntiKt4TT_phi);
	m_tree->SBA(ConeGJet10_Et);
	m_tree->SBA(ConeGJet10_eta);
	m_tree->SBA(ConeGJet10_phi);
	m_tree->SBA(ConeGJet10_seedIndex);
	//m_tree->SBA(JFexJet_Et);
	//m_tree->SBA(JFexJet_eta);
	//m_tree->SBA(JFexJet_phi);
    m_tree->SBA(AntiKt10gT_Et);
    m_tree->SBA(AntiKt10gT_eta);
    m_tree->SBA(AntiKt10gT_phi);
    m_tree->SBA(AntiKt4jT_Et);
    m_tree->SBA(AntiKt4jT_eta);
    m_tree->SBA(AntiKt4jT_phi);
	m_tree->SBA(AntiKt10LCTopoJets_n);
	m_tree->SBA(AntiKt10LCTopoJets_pt);
	m_tree->SBA(AntiKt10LCTopoJets_eta);
	m_tree->SBA(AntiKt10LCTopoJets_phi);
	m_tree->SBA(AntiKt10LCTopoJets_m);
    m_tree->SBA(AntiKt10LCTopoTrimmedSmallR20PtFrac5Jets_n);
    m_tree->SBA(AntiKt10LCTopoTrimmedSmallR20PtFrac5Jets_pt);
    m_tree->SBA(AntiKt10LCTopoTrimmedSmallR20PtFrac5Jets_eta);
    m_tree->SBA(AntiKt10LCTopoTrimmedSmallR20PtFrac5Jets_phi);
    m_tree->SBA(AntiKt10LCTopoTrimmedSmallR20PtFrac5Jets_m);
    m_tree->SBA(AntiKt10LCTopoTrimmedSmallR20PtFrac5Jets_nsj);
	m_tree->SBA(AntiKt4LCTopoJets_n);
	m_tree->SBA(AntiKt4LCTopoJets_pt);
	m_tree->SBA(AntiKt4LCTopoJets_eta);
	m_tree->SBA(AntiKt4LCTopoJets_phi);
	m_tree->SBA(AntiKt4LCTopoJets_m);
	m_tree->SBA(CamKt12LCTopoJets_n);
	m_tree->SBA(CamKt12LCTopoJets_pt);
	m_tree->SBA(CamKt12LCTopoJets_eta);
	m_tree->SBA(CamKt12LCTopoJets_phi);
	m_tree->SBA(CamKt12LCTopoJets_m);
	m_tree->SBA(AntiKt10TruthJets_n);
	m_tree->SBA(AntiKt10TruthJets_pt);
	m_tree->SBA(AntiKt10TruthJets_eta);
	m_tree->SBA(AntiKt10TruthJets_phi);
	m_tree->SBA(AntiKt10TruthJets_m);
	m_tree->SBA(AntiKt4TruthJets_n);
	m_tree->SBA(AntiKt4TruthJets_pt);
	m_tree->SBA(AntiKt4TruthJets_eta);
	m_tree->SBA(AntiKt4TruthJets_phi);
	m_tree->SBA(AntiKt4TruthJets_m);
	m_tree->SBA(CamKt12TruthJets_n);
	m_tree->SBA(CamKt12TruthJets_pt);
	m_tree->SBA(CamKt12TruthJets_eta);
	m_tree->SBA(CamKt12TruthJets_phi);
	m_tree->SBA(CamKt12TruthJets_m);
	m_tree->SBA(MET_Truth_NonInt_mpx);
	m_tree->SBA(MET_Truth_NonInt_mpy);
	m_tree->SBA(MET_Truth_NonInt_sumet);
	m_tree->SBA(MET_Truth_Int_mpx);
	m_tree->SBA(MET_Truth_Int_mpy);
	m_tree->SBA(MET_Truth_Int_sumet);
	m_tree->SBA(MET_Truth_IntOut_mpx);
	m_tree->SBA(MET_Truth_IntOut_mpy);
	m_tree->SBA(MET_Truth_IntOut_sumet);
	m_tree->SBA(MET_Truth_IntMuons_mpx);
	m_tree->SBA(MET_Truth_IntMuons_mpy);
	m_tree->SBA(MET_Truth_IntMuons_sumet);
	m_tree->SBA(MET_Truth_IntCentral_mpx);
	m_tree->SBA(MET_Truth_IntEndCap_mpx);
	m_tree->SBA(MET_Truth_IntForward_mpx);
	m_tree->SBA(MET_Truth_IntCentral_mpy);
	m_tree->SBA(MET_Truth_IntEndCap_mpy);
	m_tree->SBA(MET_Truth_IntForward_mpy);
	m_tree->SBA(MET_Truth_IntCentral_sumet);
	m_tree->SBA(MET_Truth_IntEndCap_sumet);
	m_tree->SBA(MET_Truth_IntForward_sumet);
	m_tree->SBA(eventNumber);
	m_tree->SBA(weight);
	m_tree->SBA(mcEventWeight);
	m_tree->SBA(actualIntPerCross);
	m_tree->SBA(averageIntPerCross);
	m_tree->SBA(PileUp_inTime_MinBias);
	m_tree->SBA(distFrontBunchTrain);
	m_tree->SBA(Kt4LCTopoEventShape_Density);
	m_tree->SBA(Kt4LCTopoEventShape_DensityArea);
	m_tree->SBA(Kt4LCTopoEventShape_DensitySigma);
	m_tree->SBA(Kt4EMTopoEventShape_Density);
	m_tree->SBA(Kt4EMTopoEventShape_DensityArea);
	m_tree->SBA(Kt4EMTopoEventShape_DensitySigma);
	m_tree->SBA(Kt4EMPFlowEventShape_Density);
	m_tree->SBA(Kt4EMPFlowEventShape_DensityArea);
	m_tree->SBA(Kt4EMPFlowEventShape_DensitySigma);
}
